name: Check Version Increment and Generate Tag

env:
  MAIN_BRANCH: "create-platform-2"

on:
  pull_request:
    types:
      - opened
      - closed
      - synchronize
    branches:
      - create-platform-2

jobs:
  version-check:
    runs-on: ubuntu-latest
    if: (github.event_name == 'pull_request' && github.event.pull_request.merged == false) || github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Fetch remote branch
        run: git fetch origin ${{ env.MAIN_BRANCH }}

      - name: Compare version
        run: |
          FILE="version.txt"
          REMOTE_VERSION=$(git show origin/${{ env.MAIN_BRANCH }}:$FILE || echo "0.0.0")
          LOCAL_VERSION=$(cat $FILE)

          if [ "$(printf '%s\n' "$REMOTE_VERSION" "$LOCAL_VERSION" | sort -V | head -n1)" = "$LOCAL_VERSION" ]; then
            echo "Error: Remote version is ($REMOTE_VERSION) and current version is ($LOCAL_VERSION), please increase it according the MR changes."
            exit 1
          fi

          echo "Software version has increased from ($REMOTE_VERSION) to ($LOCAL_VERSION)."

  release-notes-check:
    runs-on: ubuntu-latest
    needs: version-check
    if: (github.event_name == 'pull_request' && github.event.pull_request.merged == false) || github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check if release notes have been updated
        run: |
          RELEASE_NOTES_FILE="release-notes.md"
          VERSION=$(cat version.txt)
          
          if ! grep -q "$VERSION" "$RELEASE_NOTES_FILE"; then
            echo "Error: $RELEASE_NOTES_FILE does not include the changes for $VERSION version."
            exit 1
          fi

          echo "$RELEASE_NOTES_FILE includes the changes for ($VERSION) version."

  generate-tag:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'release/')
    steps:
        - run: |
            echo The PR was merged